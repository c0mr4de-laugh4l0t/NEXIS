{"$message_type":"diagnostic","message":"character literal may only contain one codepoint","code":null,"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":93,"byte_end":98,"line_start":2,"line_end":2,"column_start":47,"column_end":52,"is_primary":true,"text":[{"text":"cat > /workspaces/Rust-OS-/Nexis/src/lib.rs <<'EOF'","highlight_start":47,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if you meant to write a string literal, use double quotes","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":93,"byte_end":94,"line_start":2,"line_end":2,"column_start":47,"column_end":48,"is_primary":true,"text":[{"text":"cat > /workspaces/Rust-OS-/Nexis/src/lib.rs <<'EOF'","highlight_start":47,"highlight_end":48}],"label":null,"suggested_replacement":"\"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/lib.rs","byte_start":97,"byte_end":98,"line_start":2,"line_end":2,"column_start":51,"column_end":52,"is_primary":true,"text":[{"text":"cat > /workspaces/Rust-OS-/Nexis/src/lib.rs <<'EOF'","highlight_start":51,"highlight_end":52}],"label":null,"suggested_replacement":"\"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: character literal may only contain one codepoint\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:2:47\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mcat > /workspaces/Rust-OS-/Nexis/src/lib.rs <<'EOF'\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you meant to write a string literal, use double quotes\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mcat > /workspaces/Rust-OS-/Nexis/src/lib.rs <<\u001b[0m\u001b[0m\u001b[38;5;9m'\u001b[0m\u001b[0mEOF\u001b[0m\u001b[0m\u001b[38;5;9m'\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mcat > /workspaces/Rust-OS-/Nexis/src/lib.rs <<\u001b[0m\u001b[0m\u001b[38;5;10m\"\u001b[0m\u001b[0mEOF\u001b[0m\u001b[0m\u001b[38;5;10m\"\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"prefix `you` is unknown","code":null,"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":1804,"byte_end":1807,"line_start":49,"line_end":49,"column_start":85,"column_end":88,"is_primary":true,"text":[{"text":"  # (safe-ish simple removal: remove the attribute line only; if a second fn exists you'll still need to keep one)","highlight_start":85,"highlight_end":88}],"label":"unknown prefix","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"prefixed identifiers and literals are reserved since Rust 2021","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider inserting whitespace here","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":1807,"byte_end":1807,"line_start":49,"line_end":49,"column_start":88,"column_end":88,"is_primary":true,"text":[{"text":"  # (safe-ish simple removal: remove the attribute line only; if a second fn exists you'll still need to keep one)","highlight_start":88,"highlight_end":88}],"label":null,"suggested_replacement":" ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: prefix `you` is unknown\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:49:85\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  # (safe-ish simple removal: remove the attribute line only; if a second fn exists you'll still need to kee\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown prefix\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: prefixed identifiers and literals are reserved since Rust 2021\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider inserting whitespace here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  # (safe-ish simple removal: remove the attribute line only; if a second fn exists you\u001b[0m\u001b[0m\u001b[38;5;10m \u001b[0m\u001b[0m'll still need to keep one)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                        \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unterminated character literal","code":{"code":"E0762","explanation":"A character literal wasn't ended with a quote.\n\nErroneous code example:\n\n```compile_fail,E0762\nstatic C: char = '●; // error!\n```\n\nTo fix this error, add the missing quote:\n\n```\nstatic C: char = '●'; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":1844,"byte_end":1845,"line_start":50,"line_end":50,"column_start":10,"column_end":11,"is_primary":true,"text":[{"text":"  sed -i '/#\\[\\s*alloc_error_handler\\s*]/d' /workspaces/Rust-OS-/Nexis/src/alloc.rs","highlight_start":10,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0762]\u001b[0m\u001b[0m\u001b[1m: unterminated character literal\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:50:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  sed -i '/#\\[\\s*alloc_error_handler\\s*]/d' /workspaces/Rust-OS-/Nexis/src/alloc.rs\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 3 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 3 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0762`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0762`.\u001b[0m\n"}
